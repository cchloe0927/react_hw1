{"ast":null,"code":"var _jsxFileName = \"/Users/leehyunjeong/Desktop/sparta_react/week3_homework/src/weeks.js\";\nimport React from \"react\"; // 클래스형 컴포넌트는 이렇게 생겼습니다!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Weeks extends React.Component {\n  // 생성자 함수\n  constructor(props) {\n    super(props);\n\n    this.changeCatName = () => {\n      // 다음 강의에서 배울, state 업데이트 하는 방법입니다!\n      this.setState({\n        cat_name: '바둑이'\n      });\n      console.log('고양이 이름을 바꾼다!');\n    };\n\n    this.state = {\n      cat_name: '나비'\n    };\n    console.log('in constructor!');\n  }\n\n  componentDidMount() {\n    console.log('in componentDidMount!');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevProps, prevState);\n    console.log('in componentDidUpdate!');\n  }\n\n  componentWillUnmount() {\n    console.log('in componentWillUnmount!');\n  } // 랜더 함수 안에 리액트 엘리먼트를 넣어줍니다!\n\n\n  render() {\n    console.log('in render!');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\uC81C \\uACE0\\uC591\\uC774 \\uC774\\uB984\\uC740 \", this.state.cat_name, \"\\uC785\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.changeCatName,\n        children: \"\\uACE0\\uC591\\uC774 \\uC774\\uB984 \\uBC14\\uAFB8\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Weeks;","map":{"version":3,"sources":["/Users/leehyunjeong/Desktop/sparta_react/week3_homework/src/weeks.js"],"names":["React","Weeks","Component","constructor","props","changeCatName","setState","cat_name","console","log","state","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAEpC;AACEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,aAVmB,GAUH,MAAM;AACpB;AACE,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAd;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KAfkB;;AAGjB,SAAKC,KAAL,GAAa;AACXH,MAAAA,QAAQ,EAAE;AADC,KAAb;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;;AASDE,EAAAA,iBAAiB,GAAE;AACjBH,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;;AAEDG,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACpCN,IAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ,EAAuBC,SAAvB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;;AAEDM,EAAAA,oBAAoB,GAAE;AAClBP,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,GA/BiC,CAiClC;;;AACAO,EAAAA,MAAM,GAAG;AAEPR,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,wBACE;AAAA,8BAEE;AAAA,oEAAe,KAAKC,KAAL,CAAWH,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKF,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA7CiC;;AAgDpC,eAAeJ,KAAf","sourcesContent":["import React from \"react\";\n\n// 클래스형 컴포넌트는 이렇게 생겼습니다!\nclass Weeks extends React.Component {\n\n// 생성자 함수\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      cat_name: '나비',\n    };\n\n    console.log('in constructor!');\n  }\n\n  changeCatName = () => {\n    // 다음 강의에서 배울, state 업데이트 하는 방법입니다!\n      this.setState({cat_name: '바둑이'});\n\n      console.log('고양이 이름을 바꾼다!');\n  }\n\n  componentDidMount(){\n    console.log('in componentDidMount!');\n  }\n\n  componentDidUpdate(prevProps, prevState){\n      console.log(prevProps, prevState);\n      console.log('in componentDidUpdate!');\n  }\n\n  componentWillUnmount(){\n      console.log('in componentWillUnmount!');\n  }\n\n  // 랜더 함수 안에 리액트 엘리먼트를 넣어줍니다!\n  render() {\n\n    console.log('in render!');\n\n    return (\n      <div>\n          {/* render 안에서 컴포넌트의 데이터 state를 참조할 수 있습니다. */}\n        <h1>제 고양이 이름은 {this.state.cat_name}입니다.</h1>\n        <button onClick={this.changeCatName}>고양이 이름 바꾸기</button>\n      </div>\n    );\n  }\n}\n\nexport default Weeks;"]},"metadata":{},"sourceType":"module"}